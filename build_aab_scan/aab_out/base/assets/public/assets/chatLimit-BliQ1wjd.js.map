{"version":3,"file":"chatLimit-BliQ1wjd.js","sources":["../../src/lib/chatLimit.ts"],"sourcesContent":["import { supabase } from '@/lib/supabaseClient';\n\nexport type ChatLimitResult = { allowed: boolean; remaining: number; limit: number };\n\nconst DAILY_LIMIT = 10;\n\nexport async function checkAndIncrementChat(): Promise<ChatLimitResult> {\n  // Llama al RPC increment_chat_usage, que incrementa si no excede el l√≠mite\n  const { data, error } = await supabase.rpc('increment_chat_usage', { lim: DAILY_LIMIT });\n  if (error) {\n    console.warn('[chatLimit] RPC error:', error);\n    // En caso de error, por seguridad NO permitir (evita abuso si falla el control)\n    return { allowed: false, remaining: 0, limit: DAILY_LIMIT };\n  }\n  const row = Array.isArray(data) ? data[0] : data;\n  const allowed = !!row?.allowed;\n  const remaining = Number.isFinite(row?.remaining) ? row.remaining : 0;\n  return { allowed, remaining, limit: DAILY_LIMIT };\n}\n"],"names":["DAILY_LIMIT","checkAndIncrementChat","data","error","supabase","row","allowed","remaining"],"mappings":"wCAIA,MAAMA,EAAc,GAEpB,eAAsBC,GAAkD,CAEhE,KAAA,CAAE,KAAAC,EAAM,MAAAC,CAAU,EAAA,MAAMC,EAAS,IAAI,uBAAwB,CAAE,IAAKJ,CAAA,CAAa,EACvF,GAAIG,EACM,eAAA,KAAK,yBAA0BA,CAAK,EAErC,CAAE,QAAS,GAAO,UAAW,EAAG,MAAOH,GAEhD,MAAMK,EAAM,MAAM,QAAQH,CAAI,EAAIA,EAAK,CAAC,EAAIA,EACtCI,EAAU,CAAC,EAACD,GAAA,MAAAA,EAAK,SACjBE,EAAY,OAAO,SAASF,GAAA,YAAAA,EAAK,SAAS,EAAIA,EAAI,UAAY,EACpE,MAAO,CAAE,QAAAC,EAAS,UAAAC,EAAW,MAAOP,CAAY,CAClD"}