apply plugin: 'com.android.application'

android {
    namespace "com.vitacard365.app"
    compileSdk rootProject.ext.compileSdkVersion
    def appVersionCode = project.hasProperty('APP_VERSION_CODE') ? APP_VERSION_CODE.toInteger() : 2
    def appVersionName = project.hasProperty('APP_VERSION_NAME') ? APP_VERSION_NAME : "1.0.1"

    defaultConfig {
        applicationId "com.vitacard365.app"
        minSdkVersion 26
        targetSdkVersion 35
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    signingConfigs {
        release {
            storeFile file("..\\" + VITA_STORE_FILE)
            storePassword VITA_STORE_PASSWORD
            keyAlias VITA_KEY_ALIAS
            keyPassword VITA_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            // Mantener desactivado para evitar sorpresas; activar en pruebas controladas
            minifyEnabled false // true recomendado para release tras validar reglas
            shrinkResources false // true recomendado si minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // Opcional: firmar debug con release para probar instalando encima
            // signingConfig signingConfigs.release
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

// Plugin para publicación en Google Play (no ejecuta nada por sí mismo)
apply plugin: 'com.github.triplet.play'

play {
    // Ruta relativa desde app/ al archivo de credenciales
    serviceAccountCredentials.set(file("../play-service-account.json"))
    track.set("internal")
    defaultToAppBundles.set(true)
    releaseStatus.set(com.github.triplet.gradle.androidpublisher.ReleaseStatus.COMPLETED)
}

// Utilidad para imprimir versión desde Gradle
tasks.register('printVersion') {
    doLast {
        println("versionName=${android.defaultConfig.versionName}, versionCode=${android.defaultConfig.versionCode}")
    }
}
