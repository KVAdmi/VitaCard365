plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    sourceSets {
        main.java.srcDirs += ['src/main/java', 'src/main/kotlin']
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.each { output ->
                def mappingFile = variant.mappingFile
                if (mappingFile != null && mappingFile.exists()) {
                    println("Mapping file: ${mappingFile.absolutePath}")
                } else {
                    println("No mapping file found, forcing generation.")
                }
            }
        }
    }
    namespace "com.vitacard365.app"
    // SDK and app version
    compileSdkVersion rootProject.ext.compileSdkVersion
    def appVersionCode = 62
    def appVersionName = project.hasProperty('APP_VERSION_NAME') ? APP_VERSION_NAME : "1.0.62"

    defaultConfig {
        applicationId "com.vitacard365.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    signingConfigs {
        release {
            storeFile file("../../Keys/my-new-upload-key.jks")
            storePassword VITA_STORE_PASSWORD
            keyAlias VITA_KEY_ALIAS
            keyPassword VITA_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        minifyEnabled false
        shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
        }
    }

    // bundle section eliminada porque universalApk ya no es válido en AGP moderno

    // Avoid META-INF resource conflicts and exclude sourcemaps from APK
    packagingOptions {
        resources {
            excludes += ["META-INF/DEPENDENCIES", "META-INF/INDEX.LIST", "**/*.map"]
            exclude 'META-INF/kotlin-stdlib.kotlin_module'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"

    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.9.25"))
}

apply from: 'capacitor.build.gradle'

// Aplica Google Services solo si existe el archivo en el módulo app
def hasGS = file('google-services.json').exists()
if (hasGS) {
    apply plugin: 'com.google.gms.google-services'
} else {
    logger.lifecycle("[app] google-services.json no encontrado; no se aplica com.google.gms.google-services (solo afecta features Firebase)")
}

// Google Play publisher plugin
apply plugin: 'com.github.triplet.play'

play {
    serviceAccountCredentials.set(file("../play-service-account.json"))

    track.set("internal")
    defaultToAppBundles.set(true)
    releaseStatus.set(com.github.triplet.gradle.androidpublisher.ReleaseStatus.COMPLETED)
}

// Instrumentación ASM para reemplazar removeFirst/removeLast en bytecode (Android 15 fix)
apply plugin: 'removefirstlast'

// Utility to print version from Gradle
tasks.register('printVersion') {
    doLast {
        println("versionName=${android.defaultConfig.versionName}, versionCode=${android.defaultConfig.versionCode}")
    }
}

